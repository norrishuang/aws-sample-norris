<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.amazonaws.smaple</groupId>
  <artifactId>aws-managed-apache-flink-smaple-datalake</artifactId>
  <version>1.02-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>FlinkCDCSample</name>
  <url>http://maven.apache.org</url>

  <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <target.java.version>1.8</target.java.version>
      <maven.compiler.source>${target.java.version}</maven.compiler.source>
      <maven.compiler.target>${target.java.version}</maven.compiler.target>
      <flink.version>1.15.2</flink.version>
      <flink.kds.connector.version>1.15.4</flink.kds.connector.version>
      <kda.runtime.version>1.2.0</kda.runtime.version>
      <iceberg.version>1.4.0</iceberg.version>
      <hadoop.version>3.3.6</hadoop.version>
  </properties>

  <dependencies>
      <dependency>
          <groupId>org.apache.flink</groupId>
          <artifactId>flink-runtime-web</artifactId>
          <version>${flink.version}</version>
          <exclusions>
              <exclusion>
                  <groupId>org.slf4j</groupId>
                  <artifactId>slf4j-api</artifactId>
              </exclusion>
          </exclusions>
      </dependency>


      <dependency>
          <groupId>org.apache.flink</groupId>
          <artifactId>flink-connector-kinesis</artifactId>
          <version>4.1.0-1.17</version>
      </dependency>

<!--      <dependency>-->
<!--          <groupId>org.apache.hudi</groupId>-->
<!--          <artifactId>hudi-flink1.17-bundle</artifactId>-->
<!--          <version>1.0.0-beta1</version>-->
<!--      </dependency>-->


<!--    <dependency>-->
<!--        <groupId>org.apache.flink</groupId>-->
<!--        <artifactId>flink-s3-fs-hadoop</artifactId>-->
<!--        <version>${flink.version}</version>-->
<!--&lt;!&ndash;        <scope>provided</scope>&ndash;&gt;-->
<!--    </dependency>-->



    <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-table-api-java-bridge</artifactId>
        <version>${flink.version}</version>
        <scope>provided</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.flink/flink-table-planner -->
    <!-- solve:Could not instantiate the executor. Make sure a planner module is on the classpath -->
    <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-table-planner_2.12</artifactId>
        <version>${flink.version}</version>
        <scope>provided</scope>
    </dependency>


      <!--Iceberg Dependencies -->
      <dependency>
          <groupId>org.apache.iceberg</groupId>
          <artifactId>iceberg-core</artifactId>
          <version>${iceberg.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.iceberg</groupId>
          <artifactId>iceberg-flink</artifactId>
          <version>${iceberg.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.iceberg</groupId>
          <artifactId>iceberg-flink-runtime-1.15</artifactId>
          <version>${iceberg.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.iceberg</groupId>
          <artifactId>iceberg-flink</artifactId>
          <version>${iceberg.version}</version>
      </dependency>


      <dependency>
          <groupId>org.apache.iceberg</groupId>
          <artifactId>iceberg-aws-bundle</artifactId>
          <version>${iceberg.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
          <version>${hadoop.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.flink</groupId>
          <artifactId>flink-connector-files</artifactId>
          <version>${flink.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.flink</groupId>
          <artifactId>flink-table-runtime</artifactId>
          <version>${flink.version}</version>
          <scope>provided</scope>
      </dependency>

    <!-- Kinesis Data Analytics -->
    <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-kinesisanalytics-runtime</artifactId>
        <version>${kda.runtime.version}</version>
    </dependency>

    <dependency>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-sql-connector-kafka</artifactId>
        <version>3.1.0-1.18</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <!-- Java Compiler -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>${target.java.version}</source>
          <target>${target.java.version}</target>
        </configuration>
      </plugin>

      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.4.1</version>
          <executions>
          <!-- Run shade goal on package phase -->

          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <artifactSet>
                  <excludes>
                      <exclude>org.apache.flink:force-shading</exclude>
                      <exclude>com.google.code.findbugs:jsr305</exclude>
                      <exclude>org.slf4j:*</exclude>
                      <exclude>log4j:*</exclude>
                  </excludes>
              </artifactSet>
              <filters>
                <filter>
                  <!-- Do not copy the signatures in the META-INF folder.
                  Otherwise, this might cause SecurityExceptions when using the JAR. -->
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.amazonaws.sample.KafkaToIceberg</mainClass>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
              <relocations>
                <relocation>
                  <pattern>org.apache.hadoop.conf</pattern>
                  <shadedPattern>shaded.org.apache.hadoop.conf</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.apache.flink.runtime.util.HadoopUtils</pattern>
                  <shadedPattern>shadow.org.apache.flink.runtime.util.HadoopUtils</shadedPattern>
                </relocation>
              </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
